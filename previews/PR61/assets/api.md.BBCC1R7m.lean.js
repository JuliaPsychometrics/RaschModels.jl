import{_ as r,c as n,j as s,a as i,G as l,a5 as a,B as d,o}from"./chunks/framework.D6m5Lf02.js";const M=JSON.parse('{"title":"API","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),p={name:"api.md"},h={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},m={class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},c={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.65ex"},xmlns:"http://www.w3.org/2000/svg",width:"18.658ex",height:"2.245ex",role:"img",focusable:"false",viewBox:"0 -705 8246.8 992.2","aria-hidden":"true"},k={class:"jldocstring custom-block",open:""};function u(g,t,b,y,f,H){const e=d("Badge");return o(),n("div",null,[t[15]||(t[15]=s("h1",{id:"api",tabindex:"-1"},[i("API "),s("a",{class:"header-anchor",href:"#api","aria-label":'Permalink to "API"'},"​")],-1)),t[16]||(t[16]=s("h2",{id:"types",tabindex:"-1"},[i("Types "),s("a",{class:"header-anchor",href:"#types","aria-label":'Permalink to "Types"'},"​")],-1)),s("details",h,[s("summary",null,[t[0]||(t[0]=s("a",{id:"RaschModels.AbstractRaschModel",href:"#RaschModels.AbstractRaschModel"},[s("span",{class:"jlbinding"},"RaschModels.AbstractRaschModel")],-1)),t[1]||(t[1]=i()),l(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),t[2]||(t[2]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractRaschModel{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractItemResponseModels.EstimationType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractItemResponseModels.ItemResponseModel</span></span></code></pre></div><p>An abstract type representing a Rasch model.</p><p>All implementations <code>T &lt;: AbstractRaschModel{&lt;:EstimationType}</code> must implement the following traits:</p><ul><li><p><a href="./@ref"><code>model_type</code></a>: The model type for the calculation of <a href="./@ref"><code>irf</code></a>, <a href="./@ref"><code>iif</code></a>, <a href="./@ref"><code>expected_score</code></a>, and <a href="./@ref"><code>information</code></a></p></li><li><p><a href="./@ref"><code>response_type</code></a>: The allowed types of item responses</p></li></ul><p><a href="https://github.com/JuliaPsychometrics/RaschModels.jl/blob/03782f355a66a8eb02354fd74584a33a7913f4da/src/models/models.jl#L1-L11" target="_blank" rel="noreferrer">source</a></p>',5))]),s("details",Q,[s("summary",null,[t[3]||(t[3]=s("a",{id:"RaschModels.CML",href:"#RaschModels.CML"},[s("span",{class:"jlbinding"},"RaschModels.CML")],-1)),t[4]||(t[4]=i()),l(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),t[5]||(t[5]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CML{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RaschModels.ESFAlgorithm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, U</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, AbstractVector{&lt;:Real}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RaschModels.EstimationAlgorithm</span></span></code></pre></div><p>An algorithm for conditional maximum likelihood estimation of the Rasch model.</p><p><strong>Fields</strong></p><ul><li><p><code>esf_alg</code>: The algorithm for calculating elementary symmetric functions</p></li><li><p><code>start</code>: A vector of starting values for the item difficulties</p></li><li><p><code>normalize</code>: Sum-zero normalization of estimates and variance-covariance matrix</p></li></ul><p><a href="https://github.com/JuliaPsychometrics/RaschModels.jl/blob/03782f355a66a8eb02354fd74584a33a7913f4da/src/algorithms/CML.jl#L1-L8" target="_blank" rel="noreferrer">source</a></p>',5))]),s("details",T,[s("summary",null,[t[6]||(t[6]=s("a",{id:"RaschModels.Prior",href:"#RaschModels.Prior"},[s("span",{class:"jlbinding"},"RaschModels.Prior")],-1)),t[7]||(t[7]=i()),l(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),t[10]||(t[10]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Prior{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Distributions.Distribution{Distributions.Univariate, Distributions.Continuous}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, U</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Distributions.Distribution{Distributions.Univariate, Distributions.Continuous}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Distributions.Distribution{Distributions.Univariate, Distributions.Continuous}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, W</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Distributions.Distribution{Distributions.Univariate, Distributions.Continuous}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Distributions.Distribution{Distributions.Univariate, Distributions.Continuous}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Prior distributions for Rasch models.</p><p><strong>Fields</strong></p><ul><li><p><code>mu_beta</code></p></li><li><p><code>sigma_beta</code></p></li><li><p><code>beta_norm</code></p></li><li><p><code>theta</code></p></li><li><p><code>tau</code></p></li></ul><p><strong>Details</strong></p><p>Item difficulties are parameterised as</p>',6)),s("mjx-container",m,[(o(),n("svg",c,t[8]||(t[8]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(843.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(1899.6,0)"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(636,-150) scale(0.707)"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(3208,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(4208.2,0)"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(599,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" style="stroke-width:3;"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(556,0)" style="stroke-width:3;"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(1056,0)" style="stroke-width:3;"></path><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1448,0)" style="stroke-width:3;"></path></g></g></g></g><g data-mml-node="mo" transform="translate(6692.4,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(7192.6,0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(604,-150) scale(0.707)"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z" style="stroke-width:3;"></path></g></g></g></g>',1)]))),t[9]||(t[9]=s("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("mi",null,"β"),s("mo",null,"="),s("msub",null,[s("mi",null,"μ"),s("mi",null,"β")]),s("mo",null,"+"),s("msub",null,[s("mi",null,"β"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",{"data-mjx-auto-op":"false"},"norm")])])]),s("mo",null,"⋅"),s("msub",null,[s("mi",null,"σ"),s("mi",null,"β")])])],-1))]),t[11]||(t[11]=s("p",null,[s("a",{href:"https://github.com/JuliaPsychometrics/RaschModels.jl/blob/03782f355a66a8eb02354fd74584a33a7913f4da/src/priors.jl#L3-L18",target:"_blank",rel:"noreferrer"},"source")],-1))]),s("details",k,[s("summary",null,[t[12]||(t[12]=s("a",{id:"RaschModels.SummationAlgorithm",href:"#RaschModels.SummationAlgorithm"},[s("span",{class:"jlbinding"},"RaschModels.SummationAlgorithm")],-1)),t[13]||(t[13]=i()),l(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),t[14]||(t[14]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SummationAlgorithm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RaschModels.ESFAlgorithm</span></span></code></pre></div><p>Summation algorithm for calculating elementary symmetric functions and their derivatives (Fischer, 1974).</p><p><strong>References</strong></p><ul><li>Fischer, G. H. (1974). <em>Einfühung in die Theorie psychologischer Tests: Grundlagen und Anwendungen</em>. Huber.</li></ul><p><a href="https://github.com/JuliaPsychometrics/RaschModels.jl/blob/03782f355a66a8eb02354fd74584a33a7913f4da/src/algorithms/ESF.jl#L9-L20" target="_blank" rel="noreferrer">source</a></p>',5))]),t[17]||(t[17]=s("h2",{id:"functions",tabindex:"-1"},[i("Functions "),s("a",{class:"header-anchor",href:"#functions","aria-label":'Permalink to "Functions"'},"​")],-1))])}const D=r(p,[["render",u]]);export{M as __pageData,D as default};
